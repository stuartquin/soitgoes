/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Project
 */
export interface Project {
    /**
     * 
     * @type {number}
     * @memberof Project
     */
    readonly id?: number;
    /**
     * 
     * @type {string}
     * @memberof Project
     */
    name: string;
    /**
     * 
     * @type {number}
     * @memberof Project
     */
    contact: number;
    /**
     * 
     * @type {Date}
     * @memberof Project
     */
    readonly createdAt?: Date;
    /**
     * 
     * @type {number}
     * @memberof Project
     */
    readonly uninvoicedHours?: number;
    /**
     * 
     * @type {number}
     * @memberof Project
     */
    readonly totalPaid?: number;
    /**
     * 
     * @type {number}
     * @memberof Project
     */
    hourlyRate?: number;
    /**
     * 
     * @type {number}
     * @memberof Project
     */
    weeklyRate?: number | null;
    /**
     * 
     * @type {boolean}
     * @memberof Project
     */
    archived?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Project
     */
    currency?: string;
    /**
     * 
     * @type {number}
     * @memberof Project
     */
    defaultTask?: number | null;
    /**
     * 
     * @type {string}
     * @memberof Project
     */
    readonly nextSequenceNum?: string;
    /**
     * 
     * @type {string}
     * @memberof Project
     */
    billingUnit?: ProjectBillingUnitEnum;
}


/**
 * @export
 */
export const ProjectBillingUnitEnum = {
    Hour: 'HOUR',
    Day: 'DAY',
    Week: 'WEEK'
} as const;
export type ProjectBillingUnitEnum = typeof ProjectBillingUnitEnum[keyof typeof ProjectBillingUnitEnum];


/**
 * Check if a given object implements the Project interface.
 */
export function instanceOfProject(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "contact" in value;

    return isInstance;
}

export function ProjectFromJSON(json: any): Project {
    return ProjectFromJSONTyped(json, false);
}

export function ProjectFromJSONTyped(json: any, ignoreDiscriminator: boolean): Project {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': json['name'],
        'contact': json['contact'],
        'createdAt': !exists(json, 'created_at') ? undefined : (new Date(json['created_at'])),
        'uninvoicedHours': !exists(json, 'uninvoiced_hours') ? undefined : json['uninvoiced_hours'],
        'totalPaid': !exists(json, 'total_paid') ? undefined : json['total_paid'],
        'hourlyRate': !exists(json, 'hourly_rate') ? undefined : json['hourly_rate'],
        'weeklyRate': !exists(json, 'weekly_rate') ? undefined : json['weekly_rate'],
        'archived': !exists(json, 'archived') ? undefined : json['archived'],
        'currency': !exists(json, 'currency') ? undefined : json['currency'],
        'defaultTask': !exists(json, 'default_task') ? undefined : json['default_task'],
        'nextSequenceNum': !exists(json, 'next_sequence_num') ? undefined : json['next_sequence_num'],
        'billingUnit': !exists(json, 'billing_unit') ? undefined : json['billing_unit'],
    };
}

export function ProjectToJSON(value?: Project | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'contact': value.contact,
        'hourly_rate': value.hourlyRate,
        'weekly_rate': value.weeklyRate,
        'archived': value.archived,
        'currency': value.currency,
        'default_task': value.defaultTask,
        'billing_unit': value.billingUnit,
    };
}

