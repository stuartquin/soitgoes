/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ProjectSummaryPreviousInvoice
 */
export interface ProjectSummaryPreviousInvoice {
    /**
     * 
     * @type {number}
     * @memberof ProjectSummaryPreviousInvoice
     */
    readonly id?: number;
    /**
     * 
     * @type {number}
     * @memberof ProjectSummaryPreviousInvoice
     */
    sequenceNum?: number;
    /**
     * 
     * @type {number}
     * @memberof ProjectSummaryPreviousInvoice
     */
    project: number;
    /**
     * 
     * @type {Date}
     * @memberof ProjectSummaryPreviousInvoice
     */
    readonly createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof ProjectSummaryPreviousInvoice
     */
    readonly issuedAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof ProjectSummaryPreviousInvoice
     */
    paidAt?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof ProjectSummaryPreviousInvoice
     */
    dueDate?: Date | null;
    /**
     * 
     * @type {number}
     * @memberof ProjectSummaryPreviousInvoice
     */
    totalPaid?: number | null;
    /**
     * 
     * @type {number}
     * @memberof ProjectSummaryPreviousInvoice
     */
    totalDue?: number | null;
    /**
     * 
     * @type {number}
     * @memberof ProjectSummaryPreviousInvoice
     */
    subtotalDue?: number | null;
    /**
     * 
     * @type {string}
     * @memberof ProjectSummaryPreviousInvoice
     */
    status?: ProjectSummaryPreviousInvoiceStatusEnum;
    /**
     * 
     * @type {string}
     * @memberof ProjectSummaryPreviousInvoice
     */
    reference?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ProjectSummaryPreviousInvoice
     */
    groupBy?: ProjectSummaryPreviousInvoiceGroupByEnum;
    /**
     * 
     * @type {boolean}
     * @memberof ProjectSummaryPreviousInvoice
     */
    showHours?: boolean;
    /**
     * 
     * @type {Array<number>}
     * @memberof ProjectSummaryPreviousInvoice
     */
    timeslips: Array<number>;
    /**
     * 
     * @type {Array<number>}
     * @memberof ProjectSummaryPreviousInvoice
     */
    tasks: Array<number>;
    /**
     * 
     * @type {Array<number>}
     * @memberof ProjectSummaryPreviousInvoice
     */
    modifier?: Array<number>;
    /**
     * 
     * @type {string}
     * @memberof ProjectSummaryPreviousInvoice
     */
    readonly pdfName?: string;
    /**
     * 
     * @type {string}
     * @memberof ProjectSummaryPreviousInvoice
     */
    readonly name?: string;
    /**
     * 
     * @type {number}
     * @memberof ProjectSummaryPreviousInvoice
     */
    exchangeRate?: number;
    /**
     * 
     * @type {string}
     * @memberof ProjectSummaryPreviousInvoice
     */
    currency?: string;
    /**
     * 
     * @type {string}
     * @memberof ProjectSummaryPreviousInvoice
     */
    billingUnit?: ProjectSummaryPreviousInvoiceBillingUnitEnum;
}


/**
 * @export
 */
export const ProjectSummaryPreviousInvoiceStatusEnum = {
    Draft: 'DRAFT',
    Issued: 'ISSUED',
    Paid: 'PAID'
} as const;
export type ProjectSummaryPreviousInvoiceStatusEnum = typeof ProjectSummaryPreviousInvoiceStatusEnum[keyof typeof ProjectSummaryPreviousInvoiceStatusEnum];

/**
 * @export
 */
export const ProjectSummaryPreviousInvoiceGroupByEnum = {
    Tasks: 'tasks',
    Timeslips: 'timeslips'
} as const;
export type ProjectSummaryPreviousInvoiceGroupByEnum = typeof ProjectSummaryPreviousInvoiceGroupByEnum[keyof typeof ProjectSummaryPreviousInvoiceGroupByEnum];

/**
 * @export
 */
export const ProjectSummaryPreviousInvoiceBillingUnitEnum = {
    Hour: 'HOUR',
    Day: 'DAY',
    Week: 'WEEK'
} as const;
export type ProjectSummaryPreviousInvoiceBillingUnitEnum = typeof ProjectSummaryPreviousInvoiceBillingUnitEnum[keyof typeof ProjectSummaryPreviousInvoiceBillingUnitEnum];


/**
 * Check if a given object implements the ProjectSummaryPreviousInvoice interface.
 */
export function instanceOfProjectSummaryPreviousInvoice(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "project" in value;
    isInstance = isInstance && "timeslips" in value;
    isInstance = isInstance && "tasks" in value;

    return isInstance;
}

export function ProjectSummaryPreviousInvoiceFromJSON(json: any): ProjectSummaryPreviousInvoice {
    return ProjectSummaryPreviousInvoiceFromJSONTyped(json, false);
}

export function ProjectSummaryPreviousInvoiceFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProjectSummaryPreviousInvoice {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'sequenceNum': !exists(json, 'sequence_num') ? undefined : json['sequence_num'],
        'project': json['project'],
        'createdAt': !exists(json, 'created_at') ? undefined : (new Date(json['created_at'])),
        'issuedAt': !exists(json, 'issued_at') ? undefined : (new Date(json['issued_at'])),
        'paidAt': !exists(json, 'paid_at') ? undefined : (json['paid_at'] === null ? null : new Date(json['paid_at'])),
        'dueDate': !exists(json, 'due_date') ? undefined : (json['due_date'] === null ? null : new Date(json['due_date'])),
        'totalPaid': !exists(json, 'total_paid') ? undefined : json['total_paid'],
        'totalDue': !exists(json, 'total_due') ? undefined : json['total_due'],
        'subtotalDue': !exists(json, 'subtotal_due') ? undefined : json['subtotal_due'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'reference': !exists(json, 'reference') ? undefined : json['reference'],
        'groupBy': !exists(json, 'group_by') ? undefined : json['group_by'],
        'showHours': !exists(json, 'show_hours') ? undefined : json['show_hours'],
        'timeslips': json['timeslips'],
        'tasks': json['tasks'],
        'modifier': !exists(json, 'modifier') ? undefined : json['modifier'],
        'pdfName': !exists(json, 'pdf_name') ? undefined : json['pdf_name'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'exchangeRate': !exists(json, 'exchange_rate') ? undefined : json['exchange_rate'],
        'currency': !exists(json, 'currency') ? undefined : json['currency'],
        'billingUnit': !exists(json, 'billing_unit') ? undefined : json['billing_unit'],
    };
}

export function ProjectSummaryPreviousInvoiceToJSON(value?: ProjectSummaryPreviousInvoice | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'sequence_num': value.sequenceNum,
        'project': value.project,
        'paid_at': value.paidAt === undefined ? undefined : (value.paidAt === null ? null : value.paidAt.toISOString()),
        'due_date': value.dueDate === undefined ? undefined : (value.dueDate === null ? null : value.dueDate.toISOString().substring(0,10)),
        'total_paid': value.totalPaid,
        'total_due': value.totalDue,
        'subtotal_due': value.subtotalDue,
        'status': value.status,
        'reference': value.reference,
        'group_by': value.groupBy,
        'show_hours': value.showHours,
        'timeslips': value.timeslips,
        'tasks': value.tasks,
        'modifier': value.modifier,
        'exchange_rate': value.exchangeRate,
        'currency': value.currency,
        'billing_unit': value.billingUnit,
    };
}

