openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /api/users/token/:
    get:
      operationId: retrieveOneTimeToken
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OneTimeToken'
          description: ''
      tags:
      - api
  /api/users/:
    get:
      operationId: retrieveUser
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
  /api/projects/:
    get:
      operationId: listProjects
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Project'
          description: ''
      tags:
      - api
    post:
      operationId: createProject
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Project'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Project'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
      tags:
      - api
  /api/projects/summary/:
    get:
      operationId: listProjectSummarys
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProjectSummary'
          description: ''
      tags:
      - api
  /api/projects/{id}:
    get:
      operationId: retrieveProject
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this project.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
      tags:
      - api
    put:
      operationId: updateProject
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this project.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Project'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Project'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateProject
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this project.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Project'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Project'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyProject
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this project.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/invoices/:
    get:
      operationId: listInvoices
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Invoice'
          description: ''
      tags:
      - api
    post:
      operationId: createInvoice
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invoice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Invoice'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Invoice'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
          description: ''
      tags:
      - api
  /api/timeslips/:
    get:
      operationId: listTimeSlips
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: invoice
        required: false
        in: query
        description: invoice
        schema:
          type: string
      - name: project
        required: false
        in: query
        description: project
        schema:
          type: string
      - name: start
        required: false
        in: query
        description: start
        schema:
          type: string
      - name: end
        required: false
        in: query
        description: end
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/TimeSlip'
          description: ''
      tags:
      - api
    post:
      operationId: createTimeSlip
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeSlip'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TimeSlip'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TimeSlip'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeSlip'
          description: ''
      tags:
      - api
  /api/invoices/new:
    get:
      operationId: listInvoiceCreateNews
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - api
  /api/invoices/{id}:
    get:
      operationId: retrieveInvoice
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this invoice.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceDetail'
          description: ''
      tags:
      - api
    put:
      operationId: updateInvoice
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this invoice.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoiceDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InvoiceDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InvoiceDetail'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceDetail'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateInvoice
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this invoice.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoiceDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InvoiceDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InvoiceDetail'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceDetail'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyInvoice
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this invoice.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/invoices/{id}/pdf:
    get:
      operationId: listInvoicePDFs
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - api
  /api/invoices/zip:
    get:
      operationId: listBulkInvoicePDFs
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - api
  /api/invoices/{id}/modifiers/{modifier}:
    get:
      operationId: retrieveInvoiceModifier
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: modifier
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceModifier'
          description: ''
      tags:
      - api
    put:
      operationId: updateInvoiceModifier
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: modifier
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoiceModifier'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InvoiceModifier'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InvoiceModifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceModifier'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateInvoiceModifier
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: modifier
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoiceModifier'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InvoiceModifier'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InvoiceModifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceModifier'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyInvoiceModifier
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: modifier
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/accounts/:
    get:
      operationId: listAccounts
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Account'
          description: ''
      tags:
      - api
  /api/tasks/:
    get:
      operationId: listTasks
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: invoices
        required: false
        in: query
        description: invoices
        schema:
          type: string
      - name: project
        required: false
        in: query
        description: project
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Task'
          description: ''
      tags:
      - api
    post:
      operationId: createTask
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Task'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
      tags:
      - api
  /api/tasks/{id}:
    get:
      operationId: retrieveTask
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this task.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
      tags:
      - api
    put:
      operationId: updateTask
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this task.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Task'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateTask
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this task.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Task'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyTask
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this task.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/contacts/:
    get:
      operationId: listContacts
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Contact'
          description: ''
      tags:
      - api
    post:
      operationId: createContact
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Contact'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Contact'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
          description: ''
      tags:
      - api
  /api/contacts/{id}:
    get:
      operationId: retrieveContact
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this contact.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
          description: ''
      tags:
      - api
    put:
      operationId: updateContact
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this contact.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Contact'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Contact'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateContact
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this contact.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Contact'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Contact'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyContact
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this contact.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/modifiers/:
    get:
      operationId: listInvoiceModifiers
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/InvoiceModifier'
          description: ''
      tags:
      - api
  /api/companies/:
    get:
      operationId: listCompanys
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Company'
          description: ''
      tags:
      - api
    post:
      operationId: createCompany
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Company'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Company'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Company'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: ''
      tags:
      - api
  /api/companies/{id}:
    get:
      operationId: retrieveCompany
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this company.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: ''
      tags:
      - api
    put:
      operationId: updateCompany
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this company.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Company'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Company'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Company'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateCompany
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this company.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Company'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Company'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Company'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyCompany
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this company.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/users/login/:
    post:
      operationId: createLogin
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login'
          description: ''
      tags:
      - api
  /api/timeslips/{id}:
    put:
      operationId: updateTimeSlip
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this time slip.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeSlip'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TimeSlip'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TimeSlip'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeSlip'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateTimeSlip
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this time slip.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeSlip'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TimeSlip'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TimeSlip'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeSlip'
          description: ''
      tags:
      - api
components:
  schemas:
    OneTimeToken:
      type: object
      properties:
        key:
          type: string
          maxLength: 40
      required:
      - key
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+\z
          maxLength: 150
        last_login:
          type: string
          format: date-time
          nullable: true
      required:
      - username
    Project:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 512
        contact:
          type: integer
        created_at:
          type: string
          format: date-time
          readOnly: true
        uninvoiced_hours:
          type: integer
          readOnly: true
        total_paid:
          type: integer
          readOnly: true
        hourly_rate:
          type: number
        archived:
          type: boolean
        currency:
          type: string
          maxLength: 3
        default_task:
          type: integer
          nullable: true
      required:
      - name
      - contact
    ProjectSummary:
      type: object
      properties:
        project:
          type: integer
        hours:
          type: number
          readOnly: true
        total:
          type: number
          readOnly: true
      required:
      - project
    Invoice:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        sequence_num:
          type: integer
        project:
          type: integer
        created_at:
          type: string
          format: date-time
          readOnly: true
        issued_at:
          type: string
          format: date-time
          readOnly: true
        paid_at:
          type: string
          format: date-time
          nullable: true
        due_date:
          type: string
          format: date
          nullable: true
        total_paid:
          type: number
          nullable: true
        total_due:
          type: number
          nullable: true
        subtotal_due:
          type: number
          nullable: true
        status:
          enum:
          - DRAFT
          - ISSUED
          - PAID
          type: string
        reference:
          type: string
          nullable: true
          maxLength: 256
        group_by:
          enum:
          - tasks
          - timeslips
          type: string
        show_hours:
          type: boolean
        timeslips:
          type: array
          items:
            type: integer
        tasks:
          type: array
          items:
            type: integer
        modifier:
          type: array
          items:
            type: integer
      required:
      - project
      - timeslips
      - tasks
      - modifier
    TimeSlip:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
        hours:
          type: number
          multipleOf: 0.001
          maximum: 1000
          minimum: -1000
        hourly_rate:
          type: number
          multipleOf: 0.001
          maximum: 1000
          minimum: -1000
        project:
          type: integer
        task:
          type: integer
          nullable: true
        invoice:
          type: integer
          nullable: true
        cost:
          type: string
          readOnly: true
        date:
          type: string
          format: date
      required:
      - user
      - project
      - task
      - date
    InvoiceDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        sequence_num:
          type: integer
        project:
          type: integer
        created_at:
          type: string
          format: date-time
          readOnly: true
        issued_at:
          type: string
          format: date-time
          readOnly: true
        paid_at:
          type: string
          format: date-time
          nullable: true
        due_date:
          type: string
          format: date
          nullable: true
        total_paid:
          type: number
          nullable: true
        total_due:
          type: number
          nullable: true
        subtotal_due:
          type: number
          nullable: true
        status:
          enum:
          - DRAFT
          - ISSUED
          - PAID
          type: string
        reference:
          type: string
          nullable: true
          maxLength: 256
        group_by:
          enum:
          - tasks
          - timeslips
          type: string
        show_hours:
          type: boolean
        timeslips:
          type: array
          items:
            type: integer
        tasks:
          type: array
          items:
            type: integer
        modifier:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                readOnly: true
              name:
                type: string
                maxLength: 512
              percent:
                type: number
              created_at:
                type: string
                format: date-time
                readOnly: true
            required:
            - name
          readOnly: true
        pdf_name:
          type: string
          readOnly: true
      required:
      - project
      - timeslips
      - tasks
    InvoiceModifier:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 512
        percent:
          type: number
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - name
    Account:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        company:
          type: object
          properties:
            id:
              type: integer
              readOnly: true
            name:
              type: string
              maxLength: 512
            billing:
              type: integer
              nullable: true
            logo_image:
              type: string
              nullable: true
          required:
          - name
      required:
      - company
    Task:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        project:
          type: integer
        name:
          type: string
          maxLength: 256
        cost:
          type: number
        created_at:
          type: string
          format: date-time
          readOnly: true
        activity_at:
          type: string
          format: date-time
          readOnly: true
        completed_at:
          type: string
          format: date-time
          nullable: true
        due_date:
          type: string
          format: date
          nullable: true
        hours_spent:
          type: number
        hours_predicted:
          type: number
        billing_type:
          enum:
          - TIME
          - FIXED
          type: string
        state:
          enum:
          - OPEN
          - PROGRESS
          - DONE
          type: string
        invoices:
          type: array
          items:
            type: string
          readOnly: true
        notes:
          type: array
          items:
            type: object
            properties:
              content:
                type: string
                nullable: true
              content_type:
                enum:
                - TEXT
                type: string
          readOnly: true
      required:
      - project
      - name
    Contact:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 512
        email:
          type: string
          format: email
          maxLength: 254
        created_at:
          type: string
          format: date-time
          readOnly: true
        address1:
          type: string
          nullable: true
          maxLength: 512
        post_code:
          type: string
          nullable: true
          maxLength: 128
      required:
      - name
      - email
    Company:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 512
        billing:
          type: integer
          nullable: true
        logo_image:
          type: string
          nullable: true
      required:
      - name
    Login:
      type: object
      properties:
        email:
          type: string
          format: email
          writeOnly: true
          maxLength: 300
        password:
          type: string
          writeOnly: true
        token:
          type: string
          readOnly: true
      required:
      - email
      - password
